BACKUP "7c-galileo/backup"
AUTHOR "Quartz and Crevs Daak"
VERSION "v0.2 alpha"

ALWAYS
  ACTION_IF "%LANGUAGE%" STR_CMP "english" BEGIN
    LAF HANDLE_CHARSETS
      STR_VAR
        tra_path = "7c-galileo/lang"
    END
  END

  OUTER_SPRINT tra "7c-galileo/lang/%LANGUAGE%"
  LOAD_TRA "%tra%/game.tra"
END

LANGUAGE
 "English"
 "english"
 "7c-galileo/lang/english/setup.tra"

BEGIN @1 DESIGNATED 100
REQUIRE_PREDICATE GAME_IS "bgee bgt eet tutu tutu_totsc" @2

ACTION_IF GAME_IS "tutu tutu_totsc" BEGIN
  OUTER_SPRINT bgt_check ""
  OUTER_SPRINT tutu_prefix "_"
  OUTER_SPRINT melicamp ~"_misc49"~
  OUTER_SPRINT dead_halfling _halfmir
  OUTER_SPRINT Gullykin fw4000
END ELSE ACTION_IF GAME_IS bgt BEGIN
  OUTER_SPRINT tutu_prefix ""
  OUTER_SPRINT melicamp ~"misc49"~
  OUTER_SPRINT dead_halfling halfmiri
  OUTER_SPRINT Gullykin ar9900
  OUTER_SPRINT bgt_check ~!Global("endofbg1","GLOBAL",2)~
END ELSE ACTION_IF GAME_IS eet BEGIN
  OUTER_SPRINT tutu_prefix ""
  OUTER_SPRINT melicamp ~"misc49"~
  OUTER_SPRINT bgt_check ~GlobalLT("endofbg1","GLOBAL",2)~
  OUTER_SPRINT dead_halfling halfmiri
  OUTER_SPRINT Gullykin fh4000
END ELSE ACTION_IF GAME_IS bgee BEGIN
  OUTER_SPRINT tutu_prefix ""
  OUTER_SPRINT melicamp ~"misc49"~
  OUTER_SPRINT bgt_check ""
  OUTER_SPRINT dead_halfling halfmiri
  OUTER_SPRINT Gullykin ar4000
END

COPY "7c#galileo/spl/7c#gal01.bam" override
COPY "7c#galileo/spl/7c#gal01.spl" override
  SAY 0x8 @7734
  SAY 0x50 @7735
  WRITE_ASCII 0x3a "7c#gal01" #8
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 17 parameter1 = 1 timing = 1 dicenumber = 1 dicesize = 8 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 139 parameter1 = RESOLVE_STR_REF @7736 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 215 parameter2 = 1 STR_VAR resource = sphealin END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 50 parameter1 = "-4365568" parameter2 = 1966080 duration = 1 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 101 parameter2 = 24 header = 10 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 296 header = 20 STR_VAR resource = spnwchrm END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 174 duration = 1 STR_VAR resource = eff_p51 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 174 timing = 3 STR_VAR resource = eff_p55 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 142 parameter2 = 37 header = 10 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 142 parameter2 = 52 header = 20 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 242 header = 20 END
  LPF ADD_SPELL_EFFECT INT_VAR opcode = 161 header = 10 END
  PATCH_FOR_EACH num IN 2 3 43 47 BEGIN
    LPF ADD_SPELL_EFFECT INT_VAR opcode = 240 parameter2 = num header = 20 END
  END
  PATCH_FOR_EACH num IN 0 1 2 3 43 47 BEGIN
    LPF ADD_SPELL_EFFECT INT_VAR opcode = 169 parameter2 = num header = 20 END
  END
  PATCH_FOR_EACH num IN 169 240 BEGIN
    LPF ADD_SPELL_EFFECT INT_VAR opcode = num parameter = 36 header = 10 END
  END
  PATCH_FOR_EACH num IN 128 5 241 BEGIN
    LPF ADD_SPELL_EFFECT INT_VAR opcode = 101 paramter2 = num header = 20 END
  END
  READ_LONG 0x64 h_of
  READ_SHORT 0x68 h_c
  FOR (ij = 0; ij < h_c; ++ij) BEGIN
    WRITE_ASCII (h_of + 0x4 + ij * 0x28) "7c#gal01" #8
    READ_SHORT (h_of + 0x1e + ij * 0x28) f_c
    READ_SHORT (h_of + 0x20 + ij * 0x28) f_of
    WRITE_SHORT (h_of + 0x0e + ij * 0x28) 30
    WRITE_SHORT (h_of + 0x2 + ij * 0x28) 4
    WRITE_BYTE (h_of + 0x0c + ij * 0x28) 5
    WRITE_SHORT (h_of + 0x12 + ij * 0x28) 3
    WRITE_SHORT (h_of + 0x26 + ij * 0x28) 160
    FOR (ji = 1; ji < f_c - 1; ++ji) BEGIN
      READ_SHORT (h_of + f_of + ij * 0x28 + ji * 0x30) fx_op
      WRITE_BYTE (h_of + f_of + 0x2 + ij * 0x28 + ji * 0x30) 2
      WRITE_BYTE (h_of + f_of + 0x3 + ij * 0x28 + ji * 0x30) 1
      WRITE_LONG (h_of + f_of + 0x4 + ij * 0x28 + ji * 0x30) ij
      PATCH_IF fx_op = 17 BEGIN
        WRITE_LONG (h_of + f_of + 0x4 + ij * 0x28 + ji * 0x30) ij
      END ELSE PATCH_IF fx_op = 101 || fx_op = 142 || fx_op = 169 || fx_op = 296 BEGIN
        WRITE_LONG (h_of + f_of + 0x0e + ij * 0x28 + ji * 0x30) (ij * 6)
      END ELSE PATCH_IF fx_op = 174 BEGIN
        READ_ASCII (h_of + f_of + 0x14 + ij * 0x28 + ji * 0x30) fx_res
        PATCH_IF "%fx_res%" STRING_EQUAL_CASE "eff_p55" BEGIN
          WRITE_LONG (h_of + f_of + 0x0e + ij * 0x28 + ji * 0x30) (ij * 6)
        END
      END
    END
  END

COPY "7c-galileo/cre/galileo.cre" "override/7c#gal02.cre"
  SAY NAME1 @771
  SAY NAME2 @771
  SAY LEADER @772
  SAY BATTLE_CRY1 @773
  SAY BATTLE_CRY2 @774
  SAY BATTLE_CRY3 @775
  SAY BORED @776
  SAY TIRED @777
  SAY MORALE @778
  SAY SELECT_COMMON1 @779
  SAY SELECT_COMMON2 @7710
  SAY SELECT_COMMON3 @7711
  SAY SELECT_ACTION1 @7712
  SAY SELECT_ACTION2 @7713
  SAY SELECT_ACTION3 @7714
  SAY SELECT_RARE1 @7715
  SAY SELECT_RARE2 @7716
  SAY SPECIAL1 @7717
  SAY SPECIAL2 @7718
  SAY AREA_DAY @7719
  SAY AREA_NIGHT @7720
  SAY AREA_CITY @7721
  SAY CRITICAL_MISS @7728
  SAY CRITICAL_HIT @7729
  SAY PICKED_POCKET @7730
  SAY SET_A_TRAP @7731
  SAY SPELL_DISRUPTED @7732
  SAY BIO @7740
  WRITE_LONG 0x18 1473
  WRITE_BYTE 0x23b 8
  WRITE_SHORT 0x24 11
  WRITE_SHORT 0x26 11
  WRITE_ASCII 0x34 "7c#gas" #8
  WRITE_ASCII 0x3c "7c#gam" #8
  WRITE_ASCII 0x2cc "7c#gal1p" #8
  WRITE_LONG 0x1c 57
  READ_BYTE 0x6a pick_pockets
  WRITE_BYTE 0x6a (pick_pockets + 5)
  WRITE_ASCII 0x280 "Galileo1" #32
  WRITE_ASCII 0x248 "7c#gal01" #8
  WRITE_ASCII 0x268 "7c#gal00" #8
  ADD_KNOWN_SPELL 7c#gal01 #0 innate
  ADD_KNOWN_SPELL spwi106 #0 wizard
  ADD_KNOWN_SPELL spwi206 #1 wizard
  ADD_MEMORIZED_SPELL 7c#gal01 #0 innate #1
  ADD_MEMORIZED_SPELL spwi106 #0 wizard #1
  ADD_CRE_ITEM "%tutu_prefix%ax1h01" #0 #0 #0 none weapon1 EQUIP
  ADD_CRE_ITEM "%tutu_prefix%dart01" #17 #0 #0 none weapon2
  ADD_CRE_ITEM "%tutu_prefix%dart01" #21 #0 #0 none inv1
  ADD_CRE_ITEM "%tutu_prefix%dart01" #18 #0 #0 none inv2
  PATCH_IF !GAME_IS bgee BEGIN
    ADD_CRE_ITEM "%tutu_prefix%shld09" #0 #0 #0 none shield
  END ELSE BEGIN
    ADD_CRE_ITEM shld10a #0 #0 #0 none shield
  END
  SET_BG2_PROFICIENCY PROFICIENCYSHORTBOW 1
  SET_BG2_PROFICIENCY PROFICIENCYDART 0

COPY_EXISTING 7c#gal02.cre "override/7c#gal04.cre"
  WRITE_SHORT 0x24 20
  WRITE_SHORT 0x26 20
  WRITE_LONG 0x18 6091
  WRITE_LONG 0x1c 73
  READ_BYTE 0x6a pick_pockets
  WRITE_BYTE 0x6a (pick_pockets + 10)
  ADD_KNOWN_SPELL spwi112 #0 wizard
  ADD_KNOWN_SPELL spwi207 #1 wizard
  READ_LONG 0x2b0 mem_offset
  READ_LONG 0x2b4 mem_count
  SET found = 0
  SET extra_plus = 0x0
  SET extra_offset = 0x0
  FOR (i = 6; i < mem_count && found = 0 ; ++i) BEGIN
    SET extra_offset += extra_plus
    SET extra = 0x14 * extra_offset
    READ_SHORT (mem_offset + i * 0x10 + extra) spl_lvl
    READ_SHORT (mem_offset + 0x6 + i * 0x10 + extra) spl_type
    PATCH_IF spl_lvl = 0 && spl_type = 1 BEGIN
      WRITE_LONG (mem_offset + 0x2 + i * 0x10 + extra) 2
      WRITE_LONG (mem_offset + 0x4 + i * 0x10 + extra) 2
      READ_SHORT (mem_offset + 0xC + i * 0x10 + extra) extra_plus
    END
    PATCH_IF spl_lvl = 1 && spl_type = 1 BEGIN
      WRITE_LONG (mem_offset + 0x2 + i * 0x10 + extra) 1
      WRITE_LONG (mem_offset + 0x4 + i * 0x10 + extra) 1
    END
  END
  ADD_MEMORIZED_SPELL spwi206 #1 wizard #1
  ADD_MEMORIZED_SPELL spwi112 #0 wizard #1
  ADD_CRE_ITEM bull01 #34 #0 #0 none quiver1
  ADD_CRE_ITEM bull01 #26 #0 #0 none quiver2
  ADD_CRE_ITEM slng01 #0 #0 #0 none inv3
  SET_BG2_PROFICIENCY PROFICIENCYDART 1

COPY_EXISTING 7c#gal04.cre "override/7c#gal06.cre"
  WRITE_SHORT 0x24 30
  WRITE_SHORT 0x26 30
  WRITE_LONG 0x18 29392
  WRITE_LONG 0x1c 86
  READ_BYTE 0x6a pick_pockets
  WRITE_BYTE 0x6a (pick_pockets + 10)
  READ_BYTE 0x53 save_death
  READ_BYTE 0x54 save_wands
  READ_BYTE 0x55 save_poly
  READ_BYTE 0x56 save_breath
  READ_BYTE 0x57 save_spell
  WRITE_BYTE 0x53 (save_death - 1)
  WRITE_BYTE 0x54 (save_wands - 2)
  WRITE_BYTE 0x55 (save_poly - 1)
  WRITE_BYTE 0x56 (save_breath - 1)
  WRITE_BYTE 0x57 (save_spell - 2)
  ADD_KNOWN_SPELL spwi118 #0 wizard
  ADD_KNOWN_SPELL spwi224 #1 wizard
  READ_LONG 0x2b0 mem_offset
  READ_LONG 0x2b4 mem_count
  SET found = 0
  SET extra_plus = 0x0
  SET extra_offset = 0x0
  FOR (i = 6; i < mem_count && found = 0; ++i) BEGIN
    SET extra_offset += extra_plus
    SET extra = 0x14 * extra_offset
    READ_SHORT (mem_offset + i * 0x10 + extra) spl_lvl
    READ_SHORT (mem_offset + 0x6 + i * 0x10 + extra) spl_type
    PATCH_IF spl_lvl = 0 && spl_type = 1 BEGIN
      WRITE_LONG (mem_offset + 0x2 + i * 0x10 + extra) 3
      WRITE_LONG (mem_offset + 0x4 + i * 0x10 + extra) 3
      READ_SHORT (mem_offset + 0xC + i * 0x10 + extra) extra_plus
    END
    PATCH_IF spl_lvl = 1 && spl_type = 1 BEGIN
      WRITE_LONG (mem_offset + 0x2 + i * 0x10 + extra) 2
      WRITE_LONG (mem_offset + 0x4 + i * 0x10 + extra) 2
    END
  END
  ADD_MEMORIZED_SPELL spwi224 #1 wizard #1
  ADD_MEMORIZED_SPELL spwi112 #0 wizard #1

ACTION_DEFINE_ASSOCIATIVE_ARRAY append_gtimes BEGIN
  6 => ONE_ROUND
  12 => TWO_ROUNDS
  18 => THREE_ROUNDS
  24 => FOUR_ROUNDS
  30 => FIVE_ROUNDS
  36 => SIX_ROUNDS
  42 => SEVEN_ROUNDS
  48 => EIGHT_ROUNDS
  54 => NINE_ROUNDS
  60 => TEN_ROUNDS
END

ACTION_PHP_EACH append_gtimes AS value => name BEGIN
  APPEND gtimes.ids ~%value% %name%~
    UNLESS ~%value% %name%~
END

APPEND pdialog.2da "GALILEO1         7C#GAL1P       7C#GAL1J       7C#GAL1D"
  UNLESS GALILEO1

APPEND state.ids "0x80101FEF CD_STATE_NOTVALID"
  UNLESS CD_STATE_NOTVALID

APPEND state.ids "0x00400010 STATE_NOT_VISIBLE"
  UNLESS STATE_NOT_VISIBLE

CLEAR_IDS_MAP

COMPILE EVAL "7c-galileo/d/before_joining.d" USING "%tra%/dialog.tra"
COMPILE EVAL "7c-galileo/d/party_dialog.d" USING "%tra%/dialog.tra"
COMPILE EVAL "7c-galileo/baf/7c#gal01.baf"
COMPILE EVAL "7c-galileo/baf/7c#gal00.baf"

ACTION_IF GAME_IS "bgee eet" BEGIN
  COPY "7c-galileo/bmp/ee" override
END ELSE BEGIN
  COPY "7c-galileo/bmp/bg" override
END

COPY_EXISTING "%Gullykin%.are" override
  PATCH_IF BUFFER_LENGTH > 0x139 BEGIN
    READ_ASCII 0x94 are_script
    READ_LONG 0x54 actors_offset
    READ_SHORT 0x58 actors_count
    SET found = 0
    FOR (j = 0; j < actors_count && found > 1; ++j) BEGIN
      READ_SHORT 0x20 current_x
      READ_SHORT 0x22 current_y
      PATCH_IF current_x = 1431 && current_y = 666 BEGIN
        WRITE_SHORT 0x20 1044 
        WRITE_SHORT 0x22 694
        WRITE_SHORT 0x24 1044
        WRITE_SHORT 0x26 694
        SET found = 1
      END
    END
  END ELSE BEGIN
    PATCH_FAIL @3
  END
BUT_ONLY

ACTION_IF "%are_script%" STR_CMP "" BEGIN
  EXTEND_BOTTOM "%are_script%.bcs" "7c-galileo/baf/ar4000.baf" EVAL
END ELSE BEGIN
  COPY_EXISTING "%Gullykin%.are" override
    WRITE_ASCIIE 0x94 "%Gullykin%"
  BUT_ONLY

  EXTEND_BOTTOM "%Gullykin%.bcs" "7c-galileo/baf/ar4000.baf" EVAL
END

COPY_EXISTING "%tutu_prefix%gandol.dlg" override
  DECOMPILE_AND_PATCH BEGIN
    REPLACE_TEXTUALLY ~GiveGoldForce\(.*.$\)~ ~GiveGoldForce\1
SetGlobal("7C#DoneFirewineRuins","GLOBAL",1)~
  END
  UNLESS "7C#DoneFirewineRuins"
BUT_ONLY

COPY_EXISTING "%dead_halfling%.cre" override
  WRITE_ASCII 0x280 "DeadHalflingMessager" #32
BUT_ONLY

// eof